# Generated by Django 5.1.5 on 2025-06-16 09:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SheetUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Sheet Name')),
                ('file', models.FileField(upload_to='uploads/')),
                ('summary', models.FileField(blank=True, null=True, upload_to='summary/', verbose_name='Summary File')),
                ('summary', models.FileField(blank=True, null=True, upload_to='summary/', verbose_name='Summary File')),
                ('is_processed', models.BooleanField(default=False)),
                ('final_quantity_report', models.FileField(blank=True, null=True, upload_to='final_quantity_report/', verbose_name='Final Quantity Report')),
                ('output_folder', models.CharField(blank=True, max_length=255, null=True)),
                ('month_from', models.CharField(blank=True, max_length=50, null=True)),
                ('month_to', models.CharField(blank=True, max_length=50, null=True)),
                ('percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('categories', models.JSONField(blank=True, null=True)),
                ('final_quantity_report', models.FileField(blank=True, null=True, upload_to='final_quantity_report/', verbose_name='Final Quantity Report')),
                ('output_folder', models.CharField(blank=True, max_length=255, null=True)),
                ('month_from', models.CharField(blank=True, max_length=50, null=True)),
                ('month_to', models.CharField(blank=True, max_length=50, null=True)),
                ('percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('categories', models.JSONField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_id', models.CharField(max_length=50, verbose_name='Cross Ref')),
                ('product_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='PID Desc')),
                ('product_type', models.CharField(blank=True, choices=[('store', 'Store'), ('com', 'Com'), ('omni', 'Omni')], max_length=5, null=True, verbose_name='Product Type')),
                ('status', models.CharField(blank=True, choices=[('not_reviewed', 'Not reviewed'), ('pending', 'Pending'), ('reviewed', 'Reviewed')], default='not_reviewed', max_length=13, null=True, verbose_name='Status')),
                ('safe_non_safe', models.CharField(blank=True, max_length=100, null=True, verbose_name='Safe/Non-Safe')),
                ('item_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Item Code')),
                ('rlj', models.CharField(blank=True, max_length=100, null=True, verbose_name='Adjusted RLJ Item')),
                ('rlj', models.CharField(blank=True, max_length=100, null=True, verbose_name='Adjusted RLJ Item')),
                ('mkst', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mkst')),
                ('current_door_count', models.FloatField(blank=True, null=True, verbose_name='Door Count')),
                ('last_store_count', models.FloatField(blank=True, null=True, verbose_name='Old Door Count')),
                ('door_count_updated', models.DateField(blank=True, null=True, verbose_name='Door Count Updated')),
                ('store_model', models.FloatField(blank=True, null=True, verbose_name='Model')),
                ('com_model', models.FloatField(blank=True, null=True, verbose_name='Com Model')),
                ('holiday_build_fc', models.FloatField(blank=True, null=True, verbose_name='HolidayBuildFC')),
                ('macys_onhand', models.FloatField(blank=True, null=True, verbose_name='MCYOH Units')),
                ('oo_units', models.FloatField(blank=True, null=True, verbose_name='OO Units')),
                ('in_transit', models.FloatField(blank=True, null=True, verbose_name='nav OO')),
                ('month_to_date_shipment', models.FloatField(blank=True, null=True, verbose_name='MTD SHIPMENTS')),
                ('last_week_shipment', models.FloatField(blank=True, null=True, verbose_name='LW Shipments')),
                ('planned_weeks_of_stock', models.FloatField(blank=True, null=True, verbose_name='Wks of Stock OH')),
                ('weeks_of_projection', models.FloatField(blank=True, null=True, verbose_name='Wks of on Proj')),
                ('last_4_weeks_shipment', models.FloatField(blank=True, null=True, verbose_name='Last 4 Wks Ships')),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vendor Name')),
                ('min_order', models.FloatField(blank=True, null=True, verbose_name='Min Order')),
                ('rl_total', models.FloatField(blank=True, null=True, verbose_name='Proj')),
                ('net_projection', models.FloatField(blank=True, null=True, verbose_name='Net Proj')),
                ('unalloc_order', models.FloatField(blank=True, null=True, verbose_name='Unalloc Orders')),
                ('ma_bin', models.FloatField(blank=True, null=True, verbose_name='RLJ OH')),
                ('fldc', models.FloatField(blank=True, null=True, verbose_name='FLDC')),
                ('wip_quantity', models.FloatField(blank=True, null=True, verbose_name='WIP')),
                ('md_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='MD Status MZ1')),
                ('replenishment_flag', models.CharField(blank=True, max_length=100, null=True, verbose_name='Repl Flag')),
                ('mcom_replenishment', models.CharField(blank=True, max_length=100, null=True, verbose_name='MCOM RPL')),
                ('pool_stock', models.FloatField(blank=True, null=True, verbose_name='Pool Stock')),
                ('first_receipt_date', models.DateField(blank=True, null=True, verbose_name='1st Rec Date')),
                ('last_receipt_date', models.DateField(blank=True, null=True, verbose_name='Last Rec Date')),
                ('item_age', models.FloatField(blank=True, null=True, verbose_name='Item Age')),
                ('first_live_date', models.DateField(blank=True, null=True, verbose_name='1st Live')),
                ('this_year_last_cost', models.FloatField(blank=True, null=True, verbose_name='TY Last Cost')),
                ('macys_owned_retail', models.FloatField(blank=True, null=True, verbose_name='Own Retail')),
                ('awr_first_ticket_retail', models.FloatField(blank=True, null=True, verbose_name='AWR 1st Tkt Ret')),
                ('metal_lock', models.FloatField(blank=True, null=True, verbose_name='Metal Lock')),
                ('mfg_policy', models.CharField(blank=True, max_length=50, null=True, verbose_name='MFG Policy')),
                ('kpi_data_updated', models.CharField(blank=True, max_length=50, null=True, verbose_name='KPI Data Updated')),
                ('kpi_door_count', models.FloatField(blank=True, null=True, verbose_name='KPI Door Count')),
                ('out_of_stock_location', models.FloatField(blank=True, null=True, verbose_name='OOS Locs')),
                ('suspended_location_count', models.FloatField(blank=True, null=True, verbose_name='Suspended Loc Count')),
                ('live_site', models.CharField(blank=True, max_length=50, null=True, verbose_name='Live Site')),
                ('masterstyle_id', models.FloatField(blank=True, null=True, verbose_name='MstrSt ID')),
                ('masterstyle_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Masterstyle Desc')),
                ('department_id', models.FloatField(blank=True, null=True, verbose_name='Dpt ID')),
                ('department_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dpt Desc')),
                ('subclass_id', models.FloatField(blank=True, null=True, verbose_name='SC ID')),
                ('subclass_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='SC Desc')),
                ('webid_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Prod Desc')),
                ('v2c', models.CharField(blank=True, max_length=50, null=True, verbose_name='V2C')),
                ('marketing_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mktg ID')),
                ('std_store_return', models.FloatField(blank=True, null=True, verbose_name='STD Store Rtn %')),
                ('last_projection_review_date', models.DateField(blank=True, null=True, verbose_name='Last Proj Review Date')),
                ('last_projection_review_date', models.DateField(blank=True, null=True, verbose_name='Last Proj Review Date')),
                ('macy_spring_projection_note', models.TextField(blank=True, null=True, verbose_name="Macy's Spring Proj Notes")),
                ('planner_response', models.TextField(blank=True, null=True, verbose_name='Planner Response')),
                ('website', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Website')),
                ('rolling_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Rolling Method')),
                ('std_trend_original', models.FloatField(blank=True, null=True, verbose_name='STD Trend')),
                ('forecasting_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Forecasting Method')),
                ('std_index_value_original', models.JSONField(blank=True, null=True, verbose_name='STD Index Value')),
                ('current_fc_index', models.CharField(blank=True, max_length=50, null=True, verbose_name='FC Index')),
                ('month_12_fc_index_original', models.FloatField(blank=True, null=True, verbose_name='12 Month FC Index')),
                ('external_factor_note', models.CharField(blank=True, max_length=300, null=True)),
                ('external_factor_percentage', models.FloatField(blank=True, null=True, verbose_name='External Factor Percentage')),
                ('external_factor_percentage', models.FloatField(blank=True, null=True, verbose_name='External Factor Percentage')),
                ('user_updated_final_quantity', models.FloatField(blank=True, null=True)),
                ('recommended_total_quantity', models.FloatField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('valentine_day', models.BooleanField(default=False)),
                ('mothers_day', models.BooleanField(default=False)),
                ('fathers_day', models.BooleanField(default=False)),
                ('mens_day', models.BooleanField(default=False)),
                ('womens_day', models.BooleanField(default=False)),
                ('forecast_month', models.CharField(blank=True, max_length=10, null=True)),
                ('next_forecast_month', models.CharField(blank=True, max_length=10, null=True)),
                ('current_date', models.DateField(blank=True, null=True)),
                ('lead_time_old', models.FloatField(blank=True, null=True)),
                ('forecast_date_old', models.DateField(blank=True, null=True)),
                ('lead_time', models.FloatField(blank=True, null=True)),
                ('forecast_date', models.DateField(blank=True, null=True)),
                ('is_lead_guideline_in_holiday', models.BooleanField(default=False)),
                ('is_added_quantity_using_macys_soq', models.BooleanField(default=False)),
                ('is_below_min_order', models.BooleanField(default=False)),
                ('is_over_macys_soq', models.BooleanField(default=False)),
                ('is_added_only_to_balance_macys_soq', models.BooleanField(default=False)),
                ('is_need_to_review_first', models.BooleanField(default=False)),
                ('is_red_box_item', models.BooleanField(default=False)),
                ('is_vdf_item', models.BooleanField(default=False)),
                ('average_store_sale_thru', models.FloatField(blank=True, null=True)),
                ('macys_proj_receipt_upto_forecast_month', models.FloatField(blank=True, null=True)),
                ('macy_soq_percentage', models.FloatField(blank=True, null=True)),
                ('qty_given_to_macys', models.FloatField(blank=True, null=True)),
                ('birthstone', models.CharField(blank=True, max_length=100, null=True)),
                ('birthstone_month', models.CharField(blank=True, max_length=100, null=True)),
                ('is_considered_birthstone', models.BooleanField(default=False)),
                ('forecast_month_required_quantity', models.FloatField(blank=True, null=True)),
                ('next_forecast_month_required_quantity', models.FloatField(blank=True, null=True)),
                ('forecast_month_planned_oh_before', models.FloatField(blank=True, null=True)),
                ('next_forecast_month_planned_oh_before', models.FloatField(blank=True, null=True)),
                ('forecast_month_planned_shipment', models.FloatField(blank=True, null=True)),
                ('next_forecast_month_planned_shipment', models.FloatField(blank=True, null=True)),
                ('qty_added_to_maintain_oh_forecast_month', models.FloatField(blank=True, null=True)),
                ('qty_added_to_maintain_oh_next_forecast_month', models.FloatField(blank=True, null=True)),
                ('qty_added_to_balance_soq_forecast_month', models.FloatField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_to', to=settings.AUTH_USER_MODEL)),
                ('sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_details', to='forecast.sheetupload')),
            ],
        ),
        migrations.CreateModel(
            name='OmniForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cross Ref')),
                ('com_month_12_fc_index', models.FloatField(blank=True, null=True)),
                ('com_trend_for_selected_month', models.FloatField(blank=True, null=True)),
                ('is_handle_large_trend_com', models.BooleanField(default=False)),
                ('final_com_trend', models.FloatField(blank=True, null=True)),
                ('is_com_inventory_maintained', models.BooleanField(default=False)),
                ('trend_index_difference_com', models.FloatField(blank=True, null=True)),
                ('forecasting_method_for_com', models.CharField(blank=True, max_length=50, null=True)),
                ('minimum_required_oh_for_com', models.FloatField(blank=True, null=True)),
                ('com_fldc', models.FloatField(blank=True, null=True)),
                ('forecast_month_required_quantity_com', models.FloatField(blank=True, null=True)),
                ('next_forecast_month_required_quantity_com', models.FloatField(blank=True, null=True)),
                ('store_month_12_fc_index_original', models.FloatField(blank=True, null=True)),
                ('loss', models.FloatField(blank=True, null=True)),
                ('average_eoh_oh', models.FloatField(blank=True, null=True)),
                ('loss_updated', models.FloatField(blank=True, null=True)),
                ('is_reduced_loss', models.BooleanField(default=False)),
                ('store_month_12_fc_index_loss', models.FloatField(blank=True, null=True)),
                ('store_trend', models.FloatField(blank=True, null=True)),
                ('is_store_inventory_maintained', models.BooleanField(default=False)),
                ('trend_index_difference_store', models.FloatField(blank=True, null=True)),
                ('forecasting_method_for_store', models.CharField(blank=True, max_length=50, null=True)),
                ('store_fldc', models.FloatField(blank=True, null=True)),
                ('is_handle_large_trend_store', models.BooleanField(default=False)),
                ('forecast_month_required_quantity_store', models.FloatField(blank=True, null=True)),
                ('next_forecast_month_required_quantity_store', models.FloatField(blank=True, null=True)),
                ('ty_store_sales_unit_selected_month_sum', models.FloatField(blank=True, null=True)),
                ('ly_store_sales_unit_selected_month_sum', models.FloatField(blank=True, null=True)),
                ('sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='omni_forecasts', to='forecast.sheetupload')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_name', models.CharField(choices=[('index', 'Index'), ('fc_by_index', 'FC by Index'), ('fc_by_trend', 'FC by Trend'), ('recommended_fc', 'Recommended FC'), ('planned_fc', 'Planned FC'), ('planned_shipments', 'Planned Shipments'), ('planned_eoh_cal', 'Planned EOH (Cal)'), ('gross_projection_nav', 'Gross Projection (Nav)'), ('macys_proj_receipts', 'Macys Proj Receipts'), ('planned_sell_thru_pct', 'Planned Sell thru %'), ('ty_total_sales_units', 'Total Sales Units (TY)'), ('ty_store_sales_units', 'Store Sales Units (TY)'), ('ty_com_sales_units', 'Com Sales Units (TY)'), ('ty_com_to_ttl_sales_pct', 'COM % to TTL (Sales) (TY)'), ('ty_total_eom_oh', 'TOTAL EOM OH (TY)'), ('ty_store_eom_oh', 'Store EOM OH (TY)'), ('ty_com_eom_oh', 'COM EOM OH (TY)'), ('ty_com_to_ttl_eoh_pct', 'COM % to TTL (EOH) (TY)'), ('ty_omni_sales_usd', 'Omni Sales $ (TY)'), ('ty_com_sales_usd', 'COM Sales $ (TY)'), ('ty_omni_aur_diff_own', 'Omni AUR/% Diff Own (TY)'), ('ty_omni_sell_thru_pct', 'Omni Sell Thru % (TY)'), ('ty_store_sell_thru_pct', 'Store SellThru % (TY)'), ('ty_omni_turn', 'Omni Turn (TY)'), ('ty_store_turn', 'Store Turn (TY)'), ('ty_store_sales_vs_ly', 'Store Sales U vs LY'), ('ty_com_sales_vs_ly', 'COM Sales U vs LY'), ('ty_store_eoh_vs_ly', 'Store EOH vs LY'), ('ty_omni_oo_units', 'Omni OO Units'), ('ty_com_oo_units', 'COM OO Units'), ('ty_omni_receipts', 'Omni Receipts (TY)'), ('ly_total_sales_units', 'Total Sales Units (LY)'), ('ly_store_sales_units', 'Store Sales Units (LY)'), ('ly_com_sales_units', 'Com Sales Units (LY)'), ('ly_com_to_ttl_sales_pct', 'COM % to TTL (Sales) (LY)'), ('ly_total_eom_oh', 'TOTAL EOM OH (LY)'), ('ly_store_eom_oh', 'Store EOM OH (LY)'), ('ly_com_eom_oh', 'COM EOM OH (LY)'), ('ly_com_to_ttl_eoh_pct', 'COM % to TTL (EOH) (LY)'), ('ly_omni_receipts', 'Omni Receipts (LY)'), ('ly_omni_sell_thru_pct', 'Omni Sell Thru % (LY)'), ('ly_store_sell_thru_pct', 'Store SellThru % (LY)'), ('ly_omni_turn', 'Omni Turn (LY)'), ('ly_store_turn', 'Store Turn (LY)'), ('ly_omni_sales_usd', 'Omni Sales $ (LY)'), ('ly_com_sales_usd', 'COM Sales $ (LY)'), ('ly_omni_aur_diff_own', 'Omni AUR/% Diff Own (LY)')], max_length=50, verbose_name='Variable')),
                ('year', models.PositiveIntegerField()),
                ('jan', models.FloatField(blank=True, null=True, verbose_name='January')),
                ('feb', models.FloatField(blank=True, null=True, verbose_name='February')),
                ('mar', models.FloatField(blank=True, null=True, verbose_name='March')),
                ('apr', models.FloatField(blank=True, null=True, verbose_name='April')),
                ('may', models.FloatField(blank=True, null=True, verbose_name='May')),
                ('jun', models.FloatField(blank=True, null=True, verbose_name='June')),
                ('jul', models.FloatField(blank=True, null=True, verbose_name='July')),
                ('aug', models.FloatField(blank=True, null=True, verbose_name='August')),
                ('sep', models.FloatField(blank=True, null=True, verbose_name='September')),
                ('oct', models.FloatField(blank=True, null=True, verbose_name='October')),
                ('nov', models.FloatField(blank=True, null=True, verbose_name='November')),
                ('dec', models.FloatField(blank=True, null=True, verbose_name='December')),
                ('productdetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forecast.productdetail', verbose_name='Product')),
                ('sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monthly_forecasts', to='forecast.sheetupload')),
            ],
        ),
        migrations.CreateModel(
            name='ForecastNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('tagged_to', models.ManyToManyField(related_name='tagged_notes', to=settings.AUTH_USER_MODEL)),
                ('productdetail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='forecast.productdetail')),
                ('sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forecast_notes', to='forecast.sheetupload')),
            ],
        ),
        migrations.CreateModel(
            name='ComForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cross Ref')),
                ('product_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cross Ref')),
                ('new_month_12_fc_index', models.FloatField(blank=True, null=True)),
                ('com_trend_for_selected_month', models.FloatField(blank=True, null=True)),
                ('is_handle_large_trend', models.BooleanField(default=False)),
                ('final_com_trend', models.FloatField(blank=True, null=True)),
                ('is_com_inventory_maintained', models.BooleanField(default=False)),
                ('ty_com_sales_unit_selected_month_sum', models.FloatField(blank=True, null=True)),
                ('ly_com_sales_unit_selected_month_sum', models.FloatField(blank=True, null=True)),
                ('std_index_value', models.FloatField(blank=True, null=True)),
                ('trend_index_difference', models.FloatField(blank=True, null=True)),
                ('forecasting_method', models.CharField(blank=True, max_length=50, null=True)),
                ('minimum_required_oh_for_com', models.FloatField(blank=True, null=True)),
                ('fldc', models.FloatField(blank=True, null=True)),
                ('vdf_added_quantity', models.FloatField(blank=True, null=True)),
                ('sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='com_forecasts', to='forecast.sheetupload')),
            ],
        ),
        migrations.CreateModel(
            name='StoreForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cross Ref')),
                ('loss', models.FloatField(blank=True, null=True)),
                ('loss_updated', models.FloatField(blank=True, null=True)),
                ('is_reduced_loss', models.BooleanField(default=False)),
                ('average_eoh_oh', models.FloatField(blank=True, null=True)),
                ('is_handle_large_trend', models.BooleanField(default=False)),
                ('new_month_12_fc_index', models.FloatField(blank=True, null=True)),
                ('std_trend', models.FloatField(blank=True, null=True)),
                ('is_inventory_maintained', models.BooleanField(default=False)),
                ('trend_index_difference', models.FloatField(blank=True, null=True)),
                ('average_com_oh', models.FloatField(blank=True, null=True)),
                ('fldc', models.FloatField(blank=True, null=True)),
                ('forecasting_method', models.CharField(blank=True, max_length=50, null=True)),
                ('sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='store_forecasts', to='forecast.sheetupload')),
            ],
        ),
        migrations.CreateModel(
            name='RetailInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_of_previous_month', models.CharField(blank=True, max_length=100, null=True)),
                ('last_year_of_previous_month', models.CharField(blank=True, max_length=100, null=True)),
                ('season', models.CharField(blank=True, max_length=100, null=True)),
                ('current_date', models.DateField(blank=True, null=True)),
                ('current_month', models.CharField(blank=True, max_length=20, null=True)),
                ('current_month_number', models.IntegerField(blank=True, null=True)),
                ('previous_week_number', models.IntegerField(blank=True, null=True)),
                ('last_month_of_previous_month_numeric', models.IntegerField(blank=True, null=True)),
                ('feb_weeks', models.IntegerField(blank=True, null=True)),
                ('mar_weeks', models.IntegerField(blank=True, null=True)),
                ('apr_weeks', models.IntegerField(blank=True, null=True)),
                ('may_weeks', models.IntegerField(blank=True, null=True)),
                ('jun_weeks', models.IntegerField(blank=True, null=True)),
                ('jul_weeks', models.IntegerField(blank=True, null=True)),
                ('aug_weeks', models.IntegerField(blank=True, null=True)),
                ('sep_weeks', models.IntegerField(blank=True, null=True)),
                ('oct_weeks', models.IntegerField(blank=True, null=True)),
                ('nov_weeks', models.IntegerField(blank=True, null=True)),
                ('dec_weeks', models.IntegerField(blank=True, null=True)),
                ('jan_weeks', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retail_info', to='forecast.sheetupload')),
            ],
            options={
                'indexes': [models.Index(fields=['sheet'], name='forecast_re_sheet_i_77c2eb_idx')],
            },
        ),
    ]
